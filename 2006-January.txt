From mario.kleiner at tuebingen.mpg.de  Wed Jan  4 00:29:28 2006
From: mario.kleiner at tuebingen.mpg.de (Mario Kleiner)
Date: Wed, 04 Jan 2006 00:29:28 +0100
Subject: [Osxptb-announce] PTB Stable-branch updated with Quicktime support
Message-ID: <43BB08D8.7060907@tuebingen.mpg.de>

Hello and happy new year!

the 'stable' branch of Psychtoolbox has
been updated again, actually before
christmas, but i forgot the announcement.

Stable contains a subset of the features
available in 'beta'. All features of beta
that are considered well-tested and stable
enough for general consumption are in there.
These are the features that will definitely be
part of PTB 1.0.7:

* All bug-fixes from 'beta' and
'Psychtoolbox-1.0.6', including KbName - warning.

* OpenGL low-level transformation
support. Currently implemented:
Screen('glPushMatrix'), glPopMatrix,
glLoadIdentitiy, glScale, glTranslate
and glRotate.

These functions allow to apply arbitrary
sequences of translations, rotations and
scaling to all drawn shapes and images.
To use them properly you'll need to read
chapter 3 of the OpenGL Programming
guide though. A link to the online book
is displayed as part of the online help of
all these new commands.

See here:

<http://www.rush3d.com/reference/opengl-redbook-1.1/chapter03.html>

A simple demo 'DrawSomeMirroredTextOSX'
illustrates how to use this to draw mirrored
text...

If you just want to draw rotated images, then
the 'rotationAngle' parameter of
Screen('DrawTexture') is the recommended way,
because this allows PTB to optimize drawing.

* The new Screen('PreloadTextures') command:

This command allows you to upload your textures
into the fast VRAM of your graphics card before a
trial starts. This command shouldn't be necessary
for most purposes, but in case you need to do
ultra rapid stimulus presentation it may give you a bit
improved timing. But caution: If used in the wrong
way, e.g., trying to upload more textures to VRAM
than fit into it, it may also screw up your presentation
timing.

Basic rule of thumb for memory consumption of textures:

For pure luminance textures (Grey level images):

mem in MB = width * height / 1024 / 1024

For all other (Luminance+Alpha, RGB, RGB+Alpha):

mem in MB = 4 * width * height / 1024 / 1024

If your gfx-card has 128 MB VRAM, then using 100 MB
for textures should be possible.

* Arc drawing functions 'DrawArc' 'FrameArc' and
'FillArc' plus a demo named ArcDemoOSX donated
by Kerstin Preuschoff (Caltech) as known from OS-9
PTB.

* A couple of new demos, most notably the
GazeContingentDemoOSX. This demo generates
a gaze contingent display: The area around the
center of fixation is displayed differently than the
periphery. "Fovea" and periphery are blended into
each other via a flexible weight mask - currently
a gaussian aperture. Due to lack of an eye-tracker
the current mouse pointer position is used as center
of fixation. The demo makes clever use of alpha
blending to achieve this at high frame rates,
currently up to 180 frames per second on a
PowerMac G5 1.6 Ghz with NVidia GeforceFX 5200
graphics card. My local prototype can go up to
400 Hz on the same hardware.

* Quicktime movie playback support: Fully implemented.
Works very reliable when Matlab is started in -nojvm
mode, aka from a terminal window with something
like "matlab -nojvm". In normal mode with user
interface, Matlab tends to hang sometimes when
playing back some movie formats, e.g., MPEG-1
movies. This has been tracked down to be not a
bug in Psychtoolbox, but a bas interaction between
Apple's Quicktime toolkit and Matlabs JVM, so there
isn't much we can do about it.

The PsychDemos folder contains a subfolder
QuicktimeDemos with some demo scripts to show
how to use Quicktime playback:

* One demo on how to do simple playback with sound,
  at selectable speed and (with some movie formats)
  even backwards.

* One demo on how to play two movies simultaneously

* One demo on how to upload a whole movie into textures
   for full control over presentation timing and order.

* One demo with a fake experiment that collects
   reaction times for a task where subject needs to
   respond with a keypress when a specific event in
   the video happens. This shows the proper robust
   way of getting the most robust and accurate RT's
   possible for movies+sound.


Btw. the provided demo movie shows the collision of
two discs. The collision sound is delayed wrt. the
visual collision, so there isn't any audio-vido sync
problem but its the movie itself. If somebody happens
to have a similar short movie with matching sound+video,
feel free to contribute it!


What is missing with respect to the 'beta' branch?

* Support for the new stereo display algorithms like
Anaglyph stereo. This needs a bit more refinement but
will be ready soon.


Updating goes via the usual UpdatePsychtoolbox command
or via DownloadPsychtoolbox('stable') if you didn't do it
already. If you don't know what this means, read:

<http://www.kyb.tuebingen.mpg.de/bu/people/kleinerm/ptbosx/>

This version needs at least OS-X 10.3.9 + Quicktime 7 installed!!!

I wish you a successfull and happy year 2006,
-mario




From mario.kleiner at tuebingen.mpg.de  Tue Jan 31 03:41:38 2006
From: mario.kleiner at tuebingen.mpg.de (Mario Kleiner)
Date: Tue, 31 Jan 2006 03:41:38 +0100
Subject: [Osxptb-announce] NEW: Improved OS-9 compatibility, Offscreen windows et al.,
 M$-Windows port of OpenGL Psychtoolbox
Message-ID: <web-17239718@tuebingen.mpg.de>

Hello all,

the beta-branch of OS-X Psychtoolbox has
received a massive update with lots of new
experimental features:

- Support for Offscreen windows is back:

  Screen('OpenOffscreenWindow'),
  and Screen('CopyWindow')
  are back and should mostly behave like
  they did in the past.

  Drawing to Offscreen windows is possible
  again.

  Offscreen windows are implemented as
  OpenGL textures, just like the textures that
  you can create via Screen('MakeTexture'),
  therefore you can mostly use Textures and
  Offscreen windows interchangeably, e.g,
  draw an Offscreen window via the 'DrawTexture'
  function...

* Some kind of compatibility mode to the old
  drawing model of the MacOS-9 PTB has been
  added. If you add the following line:

  Screen('Preference','EmulateOldPTB',1)

  to the top of your script (before any other Screen-
  call), then PTB tries to behave like the old PTB.

  The Screen('WaitBlanking') command then works
  again and all drawing commands take effect
  immediately...

Please use this new features only if you either
need to draw to Offscreen windows, or if you are
absolutely unable to port OS-9 code to OS-X. Do
not use it for writing new code!!!

-> Speed and efficiency of drawing in OS-9 mode
will be significantly lower than in OS-X mode.

-> Memory consumption may be much higher.

-> Stimulus presentation timing of the new
Screen('Flip') command is much more robust
and accurate than with the old WaitBlanking method.
Stimulus onset with 'Flip' is guaranteed to be well-
defined (down to the microsecond level) and
tear-free, whereas no such guarantees can be
made at all for the old WaitBlanking method.

-> A huge number of new features as demonstrated
by some of the PsychDemos is only possible when
not using compatibility mode.

-> This code hasn't received much testing, so it
may contain serious bugs. Support for
compatibility mode is a *very low* priority for me.
If you find problems, feel free to report them but
i won't make a commitment to fix any of the
reported problems in a short period of time (or
to fix them at all). If this proves to be too
troublesome, it will be removed again.

-> So if you are a user of the old OS-9 PTB,
you may give it a try. If it works, it works, if it
doesn't it doesn't. Feel free to report the problems
and try to provide fixes for simple problems yourself.

What definitely doesn't work is any kind of CLUT
animation for now.

If you find that this release breaks any of your
existing OS-X code, please report it immediately.
Keeping OS-X PTB well working is a much higher
priority.

Finally, beta contains the initial release of the
OpenGL Psychtoolbox for Microsoft Windows.

This is a hybrid of the old and new PTB:

All M-Files are identical to the OS-X PTB.
The Screen - Mex file is ported from the OS-X
PTB. All other Mex-files are identical to the ones
in the old Windows Psychtoolbox 2.54...

Screen is mostly feature compatible to the
Screen command in OS-X with the following
exceptions:

* Quicktime movie playback support is not
available until Apple manages to provide
a decent Quicktime-7 SDK for Windows
instead of the brain-damage that they
currently ship.

* Multi display support is limited. PTB can't
detect secondary displays of a multi-display
setup yet, but if "Desktop spanning" is enabled,
it can make use of a 2nd display for stereo-
display purpose. Just run "StereoDemo(4)" to
see how stereo-configurations are supported.
Read message 4147 for info on how to do this
on NVidia gfx-cards.

* CLUT animation is not yet possible, so
CLUTDemoOSX won't work, but linearizing
or gamma-correcting displays is possible. See
"Screen LoadNormalizedGammaTable?" for
explanation.

* Matlab version 5,6 and 7 should work.

Transition from old WinPTB to the new one will
be gradually. So if you are happy with your
current Win 2.54 setup, stick to it. If you want
to use one of the new features, give the beta
a try... This is a beta release, so it will certainly
contain some bugs that will take time to fix...

What else is new in this beta - release?

The flicker-test sheet has been removed which
used to show up on dual-display setups. It
used to confuse and annoy users. You can
find a new PerceptualVBLSyncTest.m test in
the PsychTest folder which is a good replacement.


Download works as follows:

If you already have the "UpdatePsychtoolbox" script,
then just follow its instructions.

If you are a new would-be user of 'beta', please
download:

<http://www.kyb.tuebingen.mpg.de/bu/people/kleinerm/ptbosx/DownloadPsychtoolbox.m>

Put it into your Matlab path, type
"help DownloadPsychtoolbox" and follow the
instructions. Make sure to finally invoke
the script with the flavor argument set to
'beta' ...


Again, 'beta' contains experimental code for
integration into future official releases, so
test carefully, use with caution, don't bet
on it working out of the box flawlessly...

Good luck,
-mario



